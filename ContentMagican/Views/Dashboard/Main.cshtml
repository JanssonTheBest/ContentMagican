@model DashboardViewModel

@{
    // Define available platforms for connection
    var availablePlatforms = new List<string> { "Tiktok"};

    // Extract connected platform names
    var connectedPlatforms = Model.socialMediaAccessSessions.Select(s => s.socialmedia_name).ToList();

    // Determine platforms to connect
    var platformsToConnect = availablePlatforms.Except(connectedPlatforms, StringComparer.OrdinalIgnoreCase).ToList();

    // Prepare data for Views (if needed in future)

    // Prepare data for Likes
    var totalLikes = Model.videoStatsDto.Sum(v => v.LikeCount);

    // User Stats
    var followerCount = Model.userStats?.FollowerCount ?? 0;
    var followingCount = Model.userStats?.FollowingCount ?? 0;

    // Total Views
    var totalViews = Model.videoStatsDto.Sum(v => v.ViewCount);

    // Active Tasks
    var activeTasks = Model.socialMediaAccessSessions.Count(s => s.date_expires > DateTime.UtcNow);
}

<div class="container mt-4">
    <div class="text-center mb-4">
        <h2>Dashboard</h2>
    </div>

    <div class="row">
        <!-- Connected Platforms Card -->
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <div class="card h-100 p-3">
                <div class="card-header text-center">
                    <strong>Connected Platforms</strong>
                </div>
                <div class="card-body">
                    @if (Model.socialMediaAccessSessions.Any())
                    {
                        <div class="list-group">
                            @foreach (var session in Model.socialMediaAccessSessions)
                            {
                                <div class="list-group-item d-flex align-items-center justify-content-between">
                                    <div class="d-flex align-items-center">
                                        <img src="@session.AvatarUrl" alt="@session.socialmedia_name" class="rounded-circle me-3" width="40" height="40" />
                                        <div>
                                            <h5 class="mb-0">@session.socialmedia_name</h5>
                                            <small>@session.UserName</small>
                                        </div>
                                    </div>
                                    <button class="btn btn-danger btn-sm" onclick="disconnectPlatform(@session.id)">Disconnect</button>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No platforms connected.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Platforms to Connect Card -->
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <div class="card h-100 p-3">
                <div class="card-header text-center">
                    <strong>Connect New Platforms</strong>
                </div>
                <div class="card-body">
                    @if (platformsToConnect.Any())
                    {
                        <div class="list-group">
                            @foreach (var platform in platformsToConnect)
                            {
                                <button class="btn btn-outline-primary list-group-item list-group-item-action d-flex align-items-center justify-content-between" onclick="connectPlatform('@platform')">
                                    <span>@platform</span>
                                    <i class="bi bi-plus-circle"></i>
                                </button>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-success text-center">All available platforms are connected.</p>
                    }
                </div>
            </div>
        </div>

        <!-- User Stats Card -->
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <div class="card h-100 text-center p-3">
                <div class="card-header">
                    <strong>User Statistics</strong>
                </div>
                <div class="card-body">
                    <p><strong>Followers:</strong> @followerCount</p>
                    <p><strong>Following:</strong> @followingCount</p>
                </div>
            </div>
        </div>

        <!-- Total Views Card -->
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <div class="card h-100 text-center p-3">
                <div class="card-header">
                    <strong>Total Views</strong>
                </div>
                <div class="card-body">
                    <h3>@totalViews</h3>
                </div>
                <!-- Removed the Views Chart -->
            </div>
        </div>

        <!-- Likes Card -->
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <div class="card h-100 text-center p-3">
                <div class="card-header">
                    <strong>Total Likes</strong>
                </div>
                <div class="card-body">
                    <h3>@totalLikes</h3>
                </div>
                <!-- Removed the Likes Chart -->
            </div>
        </div>

        <!-- Logs Card -->
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <div class="card h-100 text-center p-3">
                <div class="card-header">
                    <strong>Logs</strong>
                </div>
                <div class="card-body">
                    <p>@Model.videoStatsDto.Count() logs available.</p>
                    <ul class="list-group">
                        @foreach (var log in Model.videoStatsDto)
                        {
                            <li class="list-group-item">
                                <!-- You can populate log details here -->
                                <strong>Video ID:</strong> @log.VideoId <br />
                                <strong>Views:</strong> @log.ViewCount <br />
                                <strong>Likes:</strong> @log.LikeCount
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <!-- Tasks Running Card -->
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <div class="card h-100 text-center p-3">
                <div class="card-header">
                    <strong>Tasks Running</strong>
                </div>
                <div class="card-body">
                    <h3>@activeTasks</h3>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<!-- Removed Chart.js as graphs are no longer used -->

<script>
    function disconnectPlatform(sessionId) {
        if (confirm("All associated tasks will be deleted. Are you sure you want to disconnect this platform?")) {
            // Implement the disconnect logic, e.g., make an AJAX call to your controller
            fetch(`/Dashboard/DisconnectPlatform/${sessionId}`, { method: 'POST' })
                .then(response => {
                    if (response.ok) {
                        alert("Platform disconnected successfully.");
                        location.reload();
                    } else {
                        alert("Failed to disconnect the platform.");
                    }
                })
                .catch(error => {
                    console.error("Error disconnecting platform:", error);
                    alert("An error occurred while disconnecting the platform.");
                });
        }
    }

    function connectPlatform(platformName) {
        // Implement the connect logic, e.g., redirect to OAuth flow
        window.location.href = `/Dashboard/ConnectPlatform?platform=${platformName}`;
    }

    // Removed the Chart.js initialization scripts as graphs are no longer needed
</script>
